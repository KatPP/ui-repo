package sprint6;

import java.util.HashMap;
import java.util.Map;

/**
 * –í–∞—à –ª—É—á—à–∏–π –¥—Ä—É–≥ —Ä–µ—à–∏–ª –æ—Ç–∫—Ä—ã—Ç—å —Å–≤–æ—é –ø–∏—Ü—Ü–µ—Ä–∏—é –∏ –¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –ø–∏—Ü—Ü—É –Ω–∞ –¥–æ–º.
 * –û–Ω —Ö–æ—á–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã, –Ω–æ –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ —Å–æ–±—Ä–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É –ø–æ –∑–∞–∫–∞–∑–∞–º.
 * –î–∞–≤–∞–π—Ç–µ –ø–æ–º–æ–∂–µ–º –µ–º—É –≤ —ç—Ç–æ–º! –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ —Å–∞–º—ã—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ ‚Äî —Ç–µ—Ö, –∫—Ç–æ –∑–∞–∫–∞–∑—ã–≤–∞–µ—Ç –ø–∏—Ü—Ü—É —á–∞—â–µ –≤—Å–µ–≥–æ.
 */

public class Practicum51 {
    // –°–æ–∑–¥–∞–¥–∏–º —Ö–µ—à-—Ç–∞–±–ª–∏—Ü—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤.
    // –í –∫–∞—á–µ—Å—Ç–≤–µ –∫–ª—é—á–∞ –±—É–¥–µ—Ç –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞.
    // –í –∫–∞—á–µ—Å—Ç–≤–µ –∑–Ω–∞—á–µ–Ω–∏—è ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ –æ—Ç —ç—Ç–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞.
    private Map<String, Integer> orders = new HashMap<>();

    public static void main(String[] args) {
        Practicum51 pizzeria = new Practicum51();
        pizzeria.openPizzeria();
        pizzeria.printStatistics();
    }

    // –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞–∫–∞–∑—ã! üçï
    private void openPizzeria() {
        newOrder("–õ–µ–æ–Ω–∞—Ä–¥–æ");
        newOrder("–î–æ–Ω–∞—Ç–µ–ª–ª–æ");
        newOrder("–†–∞—Ñ–∞—ç–ª—å");
        newOrder("–õ–µ–æ–Ω–∞—Ä–¥–æ");
        newOrder("–ú–∏–∫–µ–ª–∞–Ω–¥–∂–µ–ª–æ");
        newOrder("–®—Ä–µ–¥–¥–µ—Ä");
        newOrder("–î–æ–Ω–∞—Ç–µ–ª–ª–æ");
    }

    private void newOrder(String clientName) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –∫–ª–∏–µ–Ω—Ç –≤ –Ω–∞—à–µ–π —Ö–µ—à-—Ç–∞–±–ª–∏—Ü–µ
        if (orders.containsKey(clientName)) {
            // –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç —É–∂–µ –µ—Å—Ç—å - —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –µ–≥–æ —Å—á–µ—Ç—á–∏–∫ –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ 1
            int currentOrders = orders.get(clientName);
            orders.put(clientName, currentOrders + 1);
        } else {
            // –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ—Ç - –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ —Å 1 –∑–∞–∫–∞–∑–æ–º
            orders.put(clientName, 1);
        }
    }


        private void printStatistics() {
            int total = 0;  // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤

            // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –∏—Ö –∑–∞–∫–∞–∑—ã
            for (String name : orders.keySet()) {
                int count = orders.get(name);
                System.out.println("–ó–∞–∫–∞–∑–æ–≤ –æ—Ç " + name + ": " + count);
                total += count;  // –°—á–∏—Ç–∞–µ–º –æ–±—â—É—é —Å—É–º–º—É
            }

            System.out.println("–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: " + total);
        }
        // –í—ã–≤–µ–¥–∏—Ç–µ —Å–æ–±—Ä–∞–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ –∫–æ–Ω—Å–æ–ª—å –∏ –ø–æ—Å—á–∏—Ç–∞–π—Ç–µ –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤.
        //
        // –§–æ—Ä–º–∞—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–Ω—Å–æ–ª—å:
        //     –ó–∞–∫–∞–∑–æ–≤ –æ—Ç –ú–∏–∫–µ–ª–∞–Ω–¥–∂–µ–ª–æ: 15
        //     –ó–∞–∫–∞–∑–æ–≤ –æ—Ç –õ–µ–æ–Ω–∞—Ä–¥–æ: 4
        //     –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: 19
    }
